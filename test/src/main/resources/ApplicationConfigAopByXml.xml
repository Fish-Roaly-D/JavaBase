<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.com.roily"/>

    <aop:aspectj-autoproxy/>

    <!--    注入目标类    -->
    <bean id="serviceDemo" class="com.com.roily.service.impl.ServiceDemoImpl"/>

    <bean id="serviceDemoImpl2" class="com.com.roily.service.impl.ServiceDemoImpl2"/>

    <!--  注入通知  -->
    <bean id="logAspect" class="com.com.roily.common.LogAspectJ"/>

    <aop:config>
        <!--  配置切面  -->
        <aop:aspect ref="logAspect">
            <!--     配置切入点       -->
<!--            <aop:pointcut id="pointCut" expression="execution(* com.com.roily.configway.byxml.service.impl.*.*(..))"/>-->
            <aop:pointcut id="pointCut" expression="execution(* com.com.roily.service.impl.*.*(..))"/>
            <!--     前置通知       -->
            <aop:before method="before" pointcut-ref="pointCut"/>
            <!--     后置通知       -->
            <aop:after-returning method="afterReturning" pointcut-ref="pointCut" returning="result"/>
            <!--     异常通知       -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointCut" throwing="e"/>
            <!--     最终通知       -->
            <aop:after method="after" pointcut-ref="pointCut"/>
            <!--     环绕通知       -->
            <aop:around method="around" pointcut-ref="pointCut"/>
        </aop:aspect>
    </aop:config>

</beans>